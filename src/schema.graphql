# import EventOrderByInput, EventCreateInput, Event from "./generated/prisma.graphql"

type Query {
  feed(filter: String, skip: Int, first: Int, orderBy: EventOrderByInput): Feed!
}

type Mutation {
  signUp(email: String!, password: String!, name: String!): AuthPayload
  signIn(email: String!, password: String!): AuthPayload
  createEvent(data: EventCreateInput!): Event!
  # vote(linkId: ID!): Vote!
}

# type Subscription {
#   newLink: LinkSubscriptionPayload
#   newVote: VoteSubscriptionPayload
# }

type Feed {
  events: [Event!]!
  count: Int!
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  events: [Event!]!
}
